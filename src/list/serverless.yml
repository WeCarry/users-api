name: ${self:service}-list-${self:provider.stage}
handler: src/list/handler.handler
events:
  - http:
      path: professional
      authorizer:
        type: CUSTOM 
        authorizerId:
          Fn::ImportValue: ${opt:stage,'dev'}-AuthenticationService
      method: get
      integration: lambda
      reqValidatorName:
        Fn::ImportValue: ${opt:stage,'dev'}-ApiGatewayRestOnlyBody
      cors: true
      request: 
        passThrough: NEVER
        template:
          application/json: ${file(src/list/request.vtl)}
      response:
        headers:
          Content-Type: "'application/json'"
        statusCodes:
          200:
            pattern: ''
          400:
            pattern: '^\[400\][\s\S]*'
            template:
              application/json: ${file(serverless-error-json.vtl)}
              text/plain: $input.path("$.errorMessage").substring(5)
          403:
            pattern: '^\[403\][\s\S]*'
            template:
              application/json: ${file(serverless-error-json.vtl)}
              text/plain: $input.path("$.errorMessage").substring(5)
          500:
            pattern: '^\[500\][\s\S]*'
            template:
              application/json: ${file(serverless-error-json.vtl)}
              text/plain: $input.path("$.errorMessage").substring(5)
      documentation:
        description: |-
          Gets a list of professionals that match the requested criteria.

          ### Security
          - System Administrator
          - API User
          - Organization Admin/Co-Admin
          - Department Manager
          - Department User
        queryParams: 
          - name: "profession"
            description: "The user's profession."
          - name: "organizationId"
            description: "Only users that are affiliated with the specified organization will be returned."
          - name: "departmentId"
            description: "Only users that belong to the specified department will be returned."
          - name: "recruiterId"
            description: "Only users that have the specified recruiter will be returned."
          - name: "isIrp"
            description: "If true only IRP users will be returned; otherwise only non IRP users will be returned."
          - name: "isMarketplace"
            description: "If true only global marketplace users will be returned; otherwise only non-global marketplace users will be returned."
          - name: "isDeactivated"
            description: "If true only deactivated users will be returned; otherwise only active users will be returned."
          - name: "orderBy"
            description: "The field to order by. Available options are intId, !intId, status, !status, name, !name, phoneNumber, !phoneNumber, email, !email, licenseType, !licenseType. (Default name)"
          - name: "limit"
            description: "The maximum number of records to return. (Default 10)"
          - name: "skip"
            description: "The number of records to skip. (Default 0)"
          - name: "status"
            description: "Account status filter. Valid values are 'NOT_ACTIVE', 'ACTIVATED', 'LICENSED', 'ISSUES', 'ACTIVE' and 'COMPLETED'."
          - name: "search"
            description: |-
              Search may be specified as a string or an advanced search object. "string" searches search all fields while advanced searches searches individual fields. The following fields are supported by search. (firstName, lastName, address, city, state, zip, licenseState, licenseNumber, licenseType, specialty, certification, additionalCertification).

              The following advanced search example returns all professionals that have a first name that starts with "test"
              {
              &nbsp;&nbsp;&nbsp;&nbsp;"firstName": "test"
              }
          - name: "licenseStatus"
            description: "License Status filter. Valid values are 'PENDING', 'NOT_ACTIVE', 'ACTIVE'."
          - name: "isSuspended"
            description: "If true only suspended users will be returned; otherwise only non-suspended users will be returned."
          - name: "select"
            description: |-
              The select statement (URI encoded). Any combination of fields may be specified.
              {
              &nbsp;&nbsp;&nbsp;&nbsp;"firstName": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"lastName": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"address": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"dateOfBirth": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"deactivatedAt": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"email": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"facebookId": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"linkedInId": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"gender": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"emailCommunicationEnabled": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"phoneNumber": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"ssn": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"timezone": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"profession": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"profilePicUrl": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"profilePicThumbUrl": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"languages": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.activityWork": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.additionalCertifications": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.additionalCertificationHistory": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.additionalDocuments": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.certifications": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.certificationHistory": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.completedAt": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.competencies": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.continuingEducation": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.currentStep": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.driversLicense": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.education": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.educationDocuments": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.educationLevel": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.ehrSkills": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.facilities": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.healthDocuments": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.liabilityInsurance": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.licensedAt": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.licenses": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.licenseHistory": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.organizationMembership": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.personalStatement": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.references": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.specialties": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.vehicleInsurance": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.w9": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.workExperience": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"briefcase.yearsOfExperience": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"emergencyContact": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.cancelledJobs": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.confirmedJobs": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.consentedAt": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.newJobEmail": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.newJobSms": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.workCities": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.workStates": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.workDistance": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.workDistance": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.availiableDate": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.requestedTimeoff": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.preferredShift": 1,
              &nbsp;&nbsp;&nbsp;&nbsp;"jobs.preferredSchedule": 1
              }
        methodResponses:
          -
            statusCode: "200"
            description:
            responseModels:
              "application/json": "ProfessionalResponse"
          -
            statusCode: "400"
            description: |-
              | Type                          | Message                         |
              | :---------------------------- | ------------------------------: |
              |                               | Invalid request body            |
              | UserNotFoundError             | Session user not found.         |
            responseModels:
              "application/json": "ProfessionalError"
          -
            statusCode: "403"
            description: |-
              This error response is returned when the session user does not have access to the requested resource.
            responseModels:
              "application/json": "ProfessionalUnauthorizedError"
          -
            statusCode: "500"
            description: |-
              This error response is returned when an unexpected server error occurs. The error message my differ depending on the situation.
            responseModels:
              "application/json": "ProfessionalError"
